class Solution {
public:
    int findMaxLength(vector<int>& nums) {
        int maxLength = 0;
        int sum = 0;
        unordered_map<int, int> mappy;  //current state(0's and 1's) --> length of subarray 
        mappy[0] = 0;
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i])
                sum++;
            else
                sum--;
            if(mappy.count(sum))
                maxLength = std::max(i + 1 - mappy[sum], maxLength);
            else 
                mappy[sum] = i + 1;
        }
        return maxLength;
    }
};